Sasha Kharlamov
150707214
skharlamov@myseneca.ca
OOP345-NCC

Workshop 3 Reflection
---------------------
In this workshop, our Collection and Set modules were not split into .h and .cpp
because the two were templated classes. We have not yet learned how to split templates
between files, so it made sense to just keep the classes and their specializations
contained in one simple .h file.
For my Pair class I added a default constructor, an '==' operator overload, a display()
function, and an outside '<<' operator overload that just calls the display() function
of Pair. I added the default empty body constructor because my debug environment was 
giving me warnings without one. The '==' operator overload was needed for the Set
module that required a comparison operator when choosing if to add an element into the
Collection array. The display() function was needed for the Collection display() to
properly display a Pair class using the '<<' operator which was overloaded outside the
class and just calls the Pair display().

Overall, I struggled with this workshop. The more in-depth templating was more complicated
in syntax than I expected, especially when calling base templated class functions in the
inherated class (For example, this is the way I figured out to access an array
member for comparison "Set<T>::operator[](i)"). It also took me far too long to understand
how to initialize a static class variable and specialize it with templates, but luckily
with some googling and help it clicked by the end of the workshop.